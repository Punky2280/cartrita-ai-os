{
  "url": "https://python.langchain.com/api_reference/community/document_loaders/langchain_community.document_loaders.brave_search.BraveSearchLoader.html#bravesearchloader",
  "title": "BraveSearchLoader#",
  "sections": [
    {
      "type": "li",
      "content": "LangChain Python API Reference"
    },
    {
      "type": "li",
      "content": "langchain-community: 0.3.29"
    },
    {
      "type": "li",
      "content": "document_loaders"
    },
    {
      "type": "li",
      "content": "BraveSearchLoader"
    },
    {
      "type": "p",
      "content": "Load withBrave Searchengine."
    },
    {
      "type": "p",
      "content": "Initializes the BraveLoader."
    },
    {
      "type": "li",
      "content": "query(str) – The query to search for."
    },
    {
      "type": "p",
      "content": "query(str) – The query to search for."
    },
    {
      "type": "li",
      "content": "api_key(str) – The API key to use."
    },
    {
      "type": "p",
      "content": "api_key(str) – The API key to use."
    },
    {
      "type": "li",
      "content": "search_kwargs(dict|None) – The search kwargs to use."
    },
    {
      "type": "p",
      "content": "search_kwargs(dict|None) – The search kwargs to use."
    },
    {
      "type": "p",
      "content": "__init__(query, api_key[, search_kwargs])"
    },
    {
      "type": "p",
      "content": "Initializes the BraveLoader."
    },
    {
      "type": "p",
      "content": "alazy_load()"
    },
    {
      "type": "p",
      "content": "A lazy loader for Documents."
    },
    {
      "type": "p",
      "content": "Load data into Document objects."
    },
    {
      "type": "p",
      "content": "lazy_load()"
    },
    {
      "type": "p",
      "content": "A lazy loader for Documents."
    },
    {
      "type": "p",
      "content": "Load data into Document objects."
    },
    {
      "type": "p",
      "content": "load_and_split([text_splitter])"
    },
    {
      "type": "p",
      "content": "Load Documents and split into chunks."
    },
    {
      "type": "p",
      "content": "Initializes the BraveLoader."
    },
    {
      "type": "li",
      "content": "query(str) – The query to search for."
    },
    {
      "type": "p",
      "content": "query(str) – The query to search for."
    },
    {
      "type": "li",
      "content": "api_key(str) – The API key to use."
    },
    {
      "type": "p",
      "content": "api_key(str) – The API key to use."
    },
    {
      "type": "li",
      "content": "search_kwargs(dict|None) – The search kwargs to use."
    },
    {
      "type": "p",
      "content": "search_kwargs(dict|None) – The search kwargs to use."
    },
    {
      "type": "p",
      "content": "A lazy loader for Documents."
    },
    {
      "type": "p",
      "content": "the documents."
    },
    {
      "type": "p",
      "content": "AsyncIterator[Document]"
    },
    {
      "type": "p",
      "content": "Load data into Document objects."
    },
    {
      "type": "p",
      "content": "the documents."
    },
    {
      "type": "p",
      "content": "list[Document]"
    },
    {
      "type": "p",
      "content": "A lazy loader for Documents."
    },
    {
      "type": "p",
      "content": "the documents."
    },
    {
      "type": "p",
      "content": "Iterator[Document]"
    },
    {
      "type": "p",
      "content": "Load data into Document objects."
    },
    {
      "type": "p",
      "content": "the documents."
    },
    {
      "type": "p",
      "content": "List[Document]"
    },
    {
      "type": "p",
      "content": "Load Documents and split into chunks. Chunks are returned as Documents."
    },
    {
      "type": "p",
      "content": "Do not override this method. It should be considered to be deprecated!"
    },
    {
      "type": "p",
      "content": "text_splitter(Optional[TextSplitter]) – TextSplitter instance to use for splitting documents.\nDefaults to RecursiveCharacterTextSplitter."
    },
    {
      "type": "p",
      "content": "ImportError– If langchain-text-splitters is not installed\n    and no text_splitter is provided."
    },
    {
      "type": "p",
      "content": "List of Documents."
    },
    {
      "type": "p",
      "content": "list[Document]"
    },
    {
      "type": "p",
      "content": "Examples using BraveSearchLoader"
    },
    {
      "type": "li",
      "content": "Brave Search"
    },
    {
      "type": "p",
      "content": "Brave Search"
    },
    {
      "type": "li",
      "content": "BraveSearchLoader__init__()alazy_load()aload()lazy_load()load()load_and_split()"
    },
    {
      "type": "li",
      "content": "alazy_load()"
    },
    {
      "type": "li",
      "content": "lazy_load()"
    },
    {
      "type": "li",
      "content": "load_and_split()"
    }
  ],
  "code_examples": [
    "document_loaders",
    "__init__",
    "alazy_load",
    "aload",
    "lazy_load",
    "load",
    "load_and_split",
    "BraveSearchLoader",
    "__init__()",
    "alazy_load()",
    "aload()",
    "lazy_load()",
    "load()",
    "load_and_split()"
  ],
  "api_signatures": [
    "classlangchain_community.document_loaders.brave_search.BraveSearchLoader(query:str,api_key:str,search_kwargs:dict|None=None,)[source]#",
    "langchain_community.document_loaders.brave_search.",
    "BraveSearchLoader",
    "(",
    "query:str",
    "api_key:str",
    "search_kwargs:dict|None=None",
    ")",
    "__init__(query:str,api_key:str,search_kwargs:dict|None=None,)[source]#",
    "__init__",
    "(",
    "query:str",
    "api_key:str",
    "search_kwargs:dict|None=None",
    ")",
    "asyncalazy_load()→AsyncIterator[Document]#",
    "alazy_load",
    "(",
    ")",
    "→AsyncIterator[Document]",
    "→",
    "AsyncIterator[Document]",
    "asyncaload()→list[Document]#",
    "aload",
    "(",
    ")",
    "→list[Document]",
    "→",
    "list[Document]",
    "lazy_load()→Iterator[Document][source]#",
    "lazy_load",
    "(",
    ")",
    "→Iterator[Document]",
    "→",
    "Iterator[Document]",
    "load()→List[Document][source]#",
    "load",
    "(",
    ")",
    "→List[Document]",
    "→",
    "List[Document]",
    "load_and_split(text_splitter:TextSplitter|None=None,)→list[Document]#",
    "load_and_split",
    "(",
    "text_splitter:TextSplitter|None=None",
    ")",
    "→list[Document]",
    "→",
    "list[Document]"
  ],
  "parameters": [
    "query:str",
    "api_key:str",
    "search_kwargs:dict|None=None",
    "query:str",
    "api_key:str",
    "search_kwargs:dict|None=None",
    "text_splitter:TextSplitter|None=None"
  ]
}