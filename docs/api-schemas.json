{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Cartrita AI OS API Schemas",
  "version": "2.0.0",
  "definitions": {
    "ChatRequest": {
      "type": "object",
      "required": ["message"],
      "properties": {
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4000,
          "description": "User message content"
        },
        "conversation_id": {
          "type": "string",
          "format": "uuid",
          "description": "Existing conversation ID (optional)"
        },
        "context": {
          "type": "object",
          "additionalProperties": true,
          "description": "Additional context data"
        },
        "agent_override": {
          "type": "string",
          "enum": ["supervisor", "research", "code", "computer_use", "knowledge", "task"],
          "description": "Override agent selection"
        },
        "stream": {
          "type": "boolean",
          "default": false,
          "description": "Enable streaming response"
        },
        "temperature": {
          "type": "number",
          "minimum": 0.0,
          "maximum": 2.0,
          "description": "Response temperature"
        },
        "max_tokens": {
          "type": "integer",
          "minimum": 1,
          "maximum": 32768,
          "description": "Maximum response tokens"
        }
      }
    },
    "ChatResponse": {
      "type": "object",
      "required": ["response", "conversation_id", "agent_type"],
      "properties": {
        "response": {
          "type": "string",
          "description": "AI response content"
        },
        "conversation_id": {
          "type": "string",
          "format": "uuid",
          "description": "Conversation ID"
        },
        "agent_type": {
          "type": "string",
          "enum": ["supervisor", "research", "code", "computer_use", "knowledge", "task"],
          "description": "Agent that handled the request"
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Complete message object"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true,
          "description": "Response metadata"
        },
        "processing_time": {
          "type": "number",
          "description": "Processing time in seconds"
        },
        "token_usage": {
          "type": "object",
          "properties": {
            "prompt_tokens": {"type": "integer"},
            "completion_tokens": {"type": "integer"},
            "total_tokens": {"type": "integer"}
          }
        },
        "sources": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Information sources used"
        }
      }
    },
    "Message": {
      "type": "object",
      "required": ["id", "role", "content", "timestamp"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Message ID"
        },
        "role": {
          "type": "string",
          "enum": ["system", "user", "assistant", "tool"],
          "description": "Message role"
        },
        "content": {
          "type": "string",
          "description": "Message content"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Message timestamp"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true,
          "description": "Message metadata"
        },
        "tokens": {
          "type": "integer",
          "description": "Token count for this message"
        },
        "processing_time": {
          "type": "number",
          "description": "Processing time for this message"
        }
      }
    },
    "Agent": {
      "type": "object",
      "required": ["id", "name", "type", "status", "model"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Agent identifier"
        },
        "name": {
          "type": "string",
          "description": "Human-readable agent name"
        },
        "type": {
          "type": "string",
          "enum": ["supervisor", "research", "code", "computer_use", "knowledge", "task"],
          "description": "Agent type"
        },
        "status": {
          "type": "string",
          "enum": ["idle", "busy", "offline", "error"],
          "description": "Current agent status"
        },
        "model": {
          "type": "string",
          "description": "AI model used by agent"
        },
        "description": {
          "type": "string",
          "description": "Agent description"
        },
        "capabilities": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Agent capabilities"
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last usage timestamp"
        },
        "usage_count": {
          "type": "integer",
          "description": "Total usage count"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "version": {"type": "string"},
            "uptime": {"type": "number"},
            "memory_usage": {"type": "number"},
            "queue_size": {"type": "integer"}
          }
        }
      }
    },
    "SSEEventTypes": {
      "StreamStart": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "stream_start"},
          "data": {
            "type": "object",
            "required": ["conversation_id", "agent_type"],
            "properties": {
              "conversation_id": {"type": "string", "format": "uuid"},
              "agent_type": {"type": "string"},
              "message_id": {"type": "string", "format": "uuid"}
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "token"},
          "data": {
            "type": "object",
            "required": ["content"],
            "properties": {
              "content": {"type": "string"},
              "delta": {"type": "string"},
              "position": {"type": "integer"}
            }
          }
        }
      },
      "FunctionCall": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "function_call"},
          "data": {
            "type": "object",
            "required": ["function_name"],
            "properties": {
              "function_name": {"type": "string"},
              "arguments": {"type": "object"},
              "call_id": {"type": "string"}
            }
          }
        }
      },
      "ToolResult": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "tool_result"},
          "data": {
            "type": "object",
            "required": ["tool_name", "result"],
            "properties": {
              "tool_name": {"type": "string"},
              "result": {"type": "string"},
              "call_id": {"type": "string"},
              "success": {"type": "boolean"}
            }
          }
        }
      },
      "AgentTaskStart": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "agent_task_start"},
          "data": {
            "type": "object",
            "required": ["task_id", "agent_type", "description"],
            "properties": {
              "task_id": {"type": "string"},
              "agent_type": {"type": "string"},
              "description": {"type": "string"},
              "estimated_duration": {"type": "number"}
            }
          }
        }
      },
      "AgentTaskProgress": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "agent_task_progress"},
          "data": {
            "type": "object",
            "required": ["task_id", "progress"],
            "properties": {
              "task_id": {"type": "string"},
              "progress": {"type": "number", "minimum": 0, "maximum": 1},
              "status": {"type": "string"},
              "current_step": {"type": "string"}
            }
          }
        }
      },
      "AgentTaskComplete": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "agent_task_complete"},
          "data": {
            "type": "object",
            "required": ["task_id", "result"],
            "properties": {
              "task_id": {"type": "string"},
              "result": {"type": "string"},
              "success": {"type": "boolean"},
              "execution_time": {"type": "number"}
            }
          }
        }
      },
      "Metrics": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "metrics"},
          "data": {
            "type": "object",
            "properties": {
              "tokens_used": {"type": "integer"},
              "response_time": {"type": "number"},
              "model_calls": {"type": "integer"},
              "memory_usage": {"type": "number"}
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "error"},
          "data": {
            "type": "object",
            "required": ["error", "code"],
            "properties": {
              "error": {"type": "string"},
              "code": {"type": "string"},
              "details": {"type": "object"},
              "recoverable": {"type": "boolean"}
            }
          }
        }
      },
      "Done": {
        "type": "object",
        "required": ["event", "data"],
        "properties": {
          "event": {"const": "done"},
          "data": {
            "type": "object",
            "required": ["final_response"],
            "properties": {
              "final_response": {"type": "string"},
              "conversation_id": {"type": "string", "format": "uuid"},
              "message_id": {"type": "string", "format": "uuid"},
              "token_usage": {
                "type": "object",
                "properties": {
                  "prompt_tokens": {"type": "integer"},
                  "completion_tokens": {"type": "integer"},
                  "total_tokens": {"type": "integer"}
                }
              },
              "processing_time": {"type": "number"}
            }
          }
        }
      }
    },
    "WebSocketMessage": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["auth", "chat", "ping", "pong"]
        },
        "api_key": {
          "type": "string",
          "description": "API key for authentication"
        },
        "message": {
          "type": "string",
          "description": "Chat message content"
        },
        "context": {
          "type": "object",
          "additionalProperties": true
        },
        "conversation_id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "AuthHeaders": {
      "type": "object",
      "properties": {
        "X-API-Key": {
          "type": "string",
          "description": "Primary API key header"
        },
        "Authorization": {
          "type": "string",
          "pattern": "^Bearer .+",
          "description": "Bearer token for session auth"
        }
      }
    },
    "FileUpload": {
      "Request": {
        "type": "object",
        "required": ["file"],
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to upload"
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "description": "Associate with conversation"
          }
        }
      },
      "Response": {
        "type": "object",
        "required": ["url", "metadata"],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "File URL"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "filename": {"type": "string"},
              "size": {"type": "integer"},
              "mime_type": {"type": "string"},
              "checksum": {"type": "string"}
            }
          }
        }
      }
    },
    "SearchRequest": {
      "type": "object",
      "required": ["query"],
      "properties": {
        "query": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000
        },
        "filters": {
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {"type": "string"}
            },
            "date_range": {"type": "string"},
            "source": {"type": "string"}
          }
        },
        "limit": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      }
    }
  },
  "endpoints": {
    "chat": {
      "post": {
        "path": "/api/chat",
        "method": "POST",
        "requestBody": {"$ref": "#/definitions/ChatRequest"},
        "responses": {
          "200": {"$ref": "#/definitions/ChatResponse"}
        }
      },
      "stream": {
        "path": "/api/chat/stream",
        "method": "POST",
        "requestBody": {"$ref": "#/definitions/ChatRequest"},
        "responses": {
          "200": {
            "description": "Server-Sent Events stream",
            "content-type": "text/event-stream",
            "events": {"$ref": "#/definitions/SSEEventTypes"}
          }
        }
      },
      "websocket": {
        "path": "/ws/chat",
        "protocol": "WebSocket",
        "messages": {"$ref": "#/definitions/WebSocketMessage"}
      }
    },
    "agents": {
      "list": {
        "path": "/api/agents",
        "method": "GET",
        "responses": {
          "200": {
            "type": "object",
            "additionalProperties": {"$ref": "#/definitions/Agent"}
          }
        }
      },
      "get": {
        "path": "/api/agents/{id}",
        "method": "GET",
        "parameters": {
          "id": {"type": "string", "in": "path"}
        },
        "responses": {
          "200": {"$ref": "#/definitions/Agent"}
        }
      }
    },
    "upload": {
      "single": {
        "path": "/upload",
        "method": "POST",
        "requestBody": {"$ref": "#/definitions/FileUpload/Request"},
        "responses": {
          "200": {"$ref": "#/definitions/FileUpload/Response"}
        }
      },
      "multiple": {
        "path": "/upload/multiple",
        "method": "POST",
        "requestBody": {
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "items": {"type": "string", "format": "binary"}
            }
          }
        },
        "responses": {
          "200": {
            "type": "array",
            "items": {"$ref": "#/definitions/FileUpload/Response"}
          }
        }
      }
    },
    "search": {
      "global": {
        "path": "/api/search",
        "method": "GET",
        "parameters": {"$ref": "#/definitions/SearchRequest"},
        "responses": {
          "200": {
            "type": "object",
            "properties": {
              "results": {"type": "array"},
              "total": {"type": "integer"},
              "page": {"type": "integer"}
            }
          }
        }
      }
    }
  }
}
