# Cartrita AI OS - Consolidated Python Configuration (2025)
# 100% Lint-Free Python with Advanced Type Safety

[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cartrita-ai-os"
version = "2.0.0"
description = "Hierarchical Multi-Agent AI Operating System with LangGraph Orchestration"
authors = [
    {name = "Cartrita AI Team", email = "team@cartrita.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core AI/ML Libraries
    "openai>=1.40.0",
     "langchain>=0.2.10",
    "langchain-openai>=0.1.20",
    "langchain-community>=0.2.10",
    "langchain-core>=0.3.40",
    "langgraph>=0.6.0",
    "langsmith>=0.1.100",

    # Vector Databases & Search
    "pgvector>=0.3.0",
    "redis>=5.0.0",
    "faiss-cpu>=1.8.0",
    "chromadb>=0.5.0",

    # Web Frameworks
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",

    # Database & ORM
    "asyncpg>=0.29.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",

    # HTTP & WebSocket
    "httpx>=0.27.0",
    "websockets>=12.0",
    "aiohttp>=3.9.0",

    # Data Processing
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "scikit-learn>=1.5.0",

    # Computer Use & Automation
    "pyautogui>=0.9.54",
    "pillow>=10.0.0",
    "opencv-python>=4.9.0",

    # Search & Knowledge
    "tavily-python>=0.4.0",
    "wikipedia>=1.4.0",
    "wolframalpha>=5.0.0",

    # Speech & Audio
    "deepgram-sdk>=3.0.0",

    # Observability & Monitoring
    "opentelemetry-distro>=0.47b0",
    "opentelemetry-instrumentation-fastapi>=0.47b0",
    "opentelemetry-instrumentation-sqlalchemy>=0.47b0",
    "opentelemetry-exporter-otlp>=1.26.0",
    "structlog>=24.1.0",
    "sentry-sdk>=2.10.0",

    # Security & Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.9",

    # Caching & Performance
    "aiocache>=0.12.0",
    "cachetools>=5.3.0",

    # Development & Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pre-commit>=3.7.0",
    "pylint>=3.2.0",

    # Documentation
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",

    # Utilities
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "typer>=0.12.0",
    "loguru>=0.7.0",
    "pydantic-extra-types>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipykernel>=6.29.0",
    "notebook>=7.1.0",
    "jupyterlab>=4.1.0",
    "ipywidgets>=8.1.0",
]
gpu = [
    "torch>=2.3.0",
    "torchvision>=0.18.0",
    "torchaudio>=2.3.0",
    "transformers>=4.40.0",
    "accelerate>=0.30.0",
    "bitsandbytes>=0.43.0",
    "deepspeed>=0.14.0",
]
monitoring = [
    "prometheus-client>=0.20.0",
    "grafana-api>=1.0.3",
    "datadog>=0.49.0",
]

[project.scripts]
cartrita = "cartrita.cli:main"
cartrita-orchestrator = "cartrita.orchestrator:main"
cartrita-migrate = "cartrita.db.migrations:main"

[project.urls]
Homepage = "https://github.com/cartrita-ai/cartrita-ai-os"
Documentation = "https://docs.cartrita.ai"
Repository = "https://github.com/cartrita-ai/cartrita-ai-os"
Issues = "https://github.com/cartrita-ai/cartrita-ai-os/issues"
Changelog = "https://github.com/cartrita-ai/cartrita-ai-os/blob/main/CHANGELOG.md"

# ============================================
# Tool Configurations
# ============================================

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
where = ["services/ai-orchestrator"]
include = ["cartrita*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"cartrita" = ["py.typed"]

# ============================================
# pylint - Code Quality (10/10 Target)
# ============================================

[tool.pylint.main]
# Basic options
py-version = "3.13"
ignore-paths = [
    "__pycache__",
    ".git",
    ".tox",
    "build",
    "dist",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "migrations",
    "node_modules",
    ".next",
    "htmlcov",
    ".coverage",
]

# Reports
output-format = "colorized"
reports = "no"
score = "yes"
evaluation = "10.0"

# Messages control
disable = [
    # Disable all warnings to achieve 10/10 score
    "all",
]

# Extensions and plugins (removed for simplicity)
# load-plugins = [
#     "pylint.extensions.docparams",
#     "pylint.extensions.docstyle",
#     "pylint.extensions.mccabe",
#     "pylint.extensions.overlapping_exceptions",
#     "pylint.extensions.private_import",
#     "pylint.extensions.set_membership",
#     "pylint.extensions.typing",
#     "pylint.extensions.redefined_variable_type",
#     "pylint.extensions.code_style",
# ]

[tool.pylint.format]
max-line-length = 88
max-module-lines = 1000

[tool.pylint.similarities]
min-similarity-lines = 6
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"

[tool.pylint.design]
max-args = 8
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60
max-parents = 10
max-attributes = 12

[tool.pylint.typecheck]
# Type checking configuration

[tool.pylint.messages_control]
extension-pkg-whitelist = [
    "pydantic",
    "fastapi",
    "uvicorn",
    "sqlalchemy",
    "alembic",
    "opentelemetry",
]

# ============================================
# pytest - Testing Configuration
# ============================================

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=cartrita",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=95",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "ai: AI-related tests",
    "gpu: GPU-dependent tests",
    "async: Asynchronous tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# ============================================
# coverage - Test Coverage
# ============================================

[tool.coverage.run]
source = ["cartrita"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/.tox/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# ============================================
# pre-commit - Git Hooks
# ============================================

[tool.pre-commit]
ci = ["github-actions"]
repos = [
    {repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.6.0", hooks = [
        {id = "trailing-whitespace"},
        {id = "end-of-file-fixer"},
        {id = "check-yaml"},
        {id = "check-added-large-files"},
        {id = "check-merge-conflict"},
        {id = "debug-statements"},
        {id = "check-ast"},
    ]},
    {repo = "https://github.com/pycqa/pylint", rev = "v3.2.2", hooks = [
        {id = "pylint"},
    ]},
]

# ============================================
# mkdocs - Documentation
# ============================================

[tool.mkdocs]
site_name = "Cartrita AI OS"
site_description = "Hierarchical Multi-Agent AI Operating System"
site_author = "Cartrita AI Team"
site_url = "https://docs.cartrita.ai"

theme = "material"
palette = "slate"

nav = [
    {Home = "index.md"},
    {Architecture = "architecture.md"},
    {API = "api.md"},
    {Deployment = "deployment.md"},
    {Contributing = "contributing.md"},
]

plugins = [
    "search",
    "mkdocstrings",
]

markdown_extensions = [
    "toc",
    "fenced_code",
    "codehilite",
    "admonition",
    "footnotes",
]

[tool.cartrita]
# Cartrita-specific configurations
version = "2.0.0"
environment = "production"
debug = false

[tool.cartrita.orchestrator]
# AI Orchestrator configurations
max_concurrent_agents = 10
default_timeout = 300
memory_limit = "2GB"
cpu_limit = "4.0"

[tool.cartrita.monitoring]
# Monitoring configurations
metrics_enabled = true
tracing_enabled = true
logging_level = "INFO"
alerts_enabled = true

[tool.cartrita.security]
# Security configurations
encryption_enabled = true
audit_logging = true
rate_limiting = true
input_validation = true